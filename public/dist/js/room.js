function Room(s,e,t,i,o){this.roomId=s,this.apiKey=e,this.session=t,this.token=i,this.Chat=o,this.observable=Rx.Observable,this.Chat=o,this.init()}Room.prototype={constructor:Room,init:function(){var s=this;if(1==OT.checkSystemRequirements()){var e={insertMode:"append",width:"100%",height:"100%"},t=OT.initPublisher(this.apiKey,"publisher",e),i=this.observable.fromEvent(this.session,"sessionConnected"),o=this.observable.fromEvent(this.session,"streamCreated");i.subscribe(function(e){s.session.publish(t)}),o.subscribe(function(t){s.Chat.setPeerConnection(t.stream.connection),swal("A new peer has been connected!"),s.session.subscribe(t.stream,"subscribers",e)}),this.session.connect(this.token)}else swal({title:"Error!",text:"Your browser does not support WebRTC!",type:"error",confirmButtonText:"OK"})}};