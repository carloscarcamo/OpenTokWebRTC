function Chat(s,e,t,n){_this=this,this.roomId=t,this.session=n,this.observable=Rx.Observable,this.$chat=$("#"+s),this.$msj=$("#"+e),this.messages=[],this.peerConnection=void 0,this.init()}Chat.prototype={_this:this,constructor:Chat,init:function(){this.domEvents(),this.events()},setPeerConnection:function(s){this.peerConnection=s},events:function(){var s=this.observable.fromEvent(this.session,"signal:chat");s.subscribe(function(s){console.log(s.data),_this.newMessage(s.data,"me")})},domEvents:function(){var s=this.observable.fromEvent(this.$msj,"keyup");s.subscribe(function(s){var e=s.which,t=$(s.target).val();13==e&&""!=t&&($(s.target).val(""),_this.sendMenssage(t))})},sendMenssage:function(s){if(void 0!=this.peerConnection){var e=s;console.log(e),this.session.signal({to:this.peerConnection,type:"chat",data:e},function(s){s?console.log("signal error ("+s.code+"): "+s.message):(console.log("message sent"),_this.newMessage(e,"peer"))})}else swal({title:"Error!",text:"There is no peer to chat!",type:"error",confirmButtonText:"OK"})},newMessage:function(s,e){console.log(s,e);var t=$("<div></div>"),n=$("<div></div>"),i=$("<div></div>"),o=$("<div></div>");t.append(n),n.append(i),n.append(o),t.addClass("col-xs-12"),o.addClass("msg-content"),"peer"==e?(n.addClass("msg-publisher"),i.addClass("arrow-right"),o.html(s),this.$chat.append(t)):"me"==e&&(n.addClass("msg-subscribers"),i.addClass("arrow-left"),o.html(s),this.$chat.append(t))}};